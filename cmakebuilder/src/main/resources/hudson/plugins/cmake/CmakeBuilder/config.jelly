<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form">

	<f:entry title="Source Directory" field="sourceDir">
    	<f:textbox />
	</f:entry>
	
	<f:entry title="Build Directory" field="buildDir">
    	<f:textbox />
	</f:entry>
	
	<f:entry title="Install Directory" field="installDir">
    	<f:textbox />
	</f:entry>
	
	<f:entry name="buildType" title="Build Type" field="buildType">
		<select name="buildType">
			<option value="Debug">Debug</option>
			<option value="Release">Release</option>
			<option value="RelWithDebInfo">RelWithDebInfo</option>
			<option value="MinSizeRel">MinSizeRel</option>
		</select>
	</f:entry>
  	
  	<f:entry title="Clean Build" field="cleanBuild">
    	<f:checkbox name="cmakebuilder.cleanBuild" checked="${instance.getCleanBuild()}"/>
    </f:entry>
  	  	
	<f:advanced>
	  	<f:entry title="Makefile Generator" field="generator">
    		<f:textbox name="cmakebuilder.generator" value="${h.defaulted(instance.getGenerator(), 'Unix Makefiles')}"/>
		</f:entry>
		
	  	<f:entry title="Make Command" field="makeCommand">
	    	<f:textbox name="cmakebuilder.makeCommand" value="${h.defaulted(instance.getMakeCommand(), 'make')}"/>
	  	</f:entry>
	  	
	  	<f:entry title="Install Command" field="installCommand">
	    	<f:textbox name="cmakebuilder.installCommand" value="${h.defaulted(instance.getInstallCommand(), 'make install')}"/>
	  	</f:entry>
	  	
	  	<f:entry title="Preload Script" field="preloadScript">
	    	<f:textbox />
	  	</f:entry>
	  	
	  	<f:entry title="Other CMake Arguments" field="cmakeArgs">
			<f:textbox  />
		</f:entry>
	</f:advanced>
	
	
</j:jelly>
