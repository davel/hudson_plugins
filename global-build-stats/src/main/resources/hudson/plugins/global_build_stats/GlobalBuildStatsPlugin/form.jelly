<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form" xmlns:i="jelly:fmt">
    <form action="${formAction}" method="post">
      Title : <input type="text" name="title" value="${currentBuildStatConfig.buildStatTitle}" /><br/>
      Chart Width * Height : <input type="text" name="buildStatWidth" size="3" value="${currentBuildStatConfig.buildStatWidth}" /> 
      * 
      <input type="text" name="buildStatHeight" size="3" value="${currentBuildStatConfig.buildStatHeight}" /><br/>
      Chart scale : <select id="${buildStatId}_historicScale" name="historicScale" onchange="changeChartLengthUnit('${buildStatId}', this.value);">
        <option value="HOURLY" selected="selected">HOURLY</option>
        <option value="DAILY">DAILY</option>
        <option value="WEEKLY">WEEKLY</option>
        <option value="MONTHLY">MONTHLY</option>
        <option value="YEARLY">YEARLY</option>
      </select><br/>
      Chart length : <input type="text" name="historicLength" size="3" value="${currentBuildStatConfig.historicLength}" />
      <span id="${buildStatId}_HOURLY">hours</span>
      <span id="${buildStatId}_DAILY" style="display:none">days</span>
      <span id="${buildStatId}_WEEKLY" style="display:none">weeks</span>
      <span id="${buildStatId}_MONTHLY" style="display:none">months</span>
      <span id="${buildStatId}_YEARLY" style="display:none">years</span><br/>
	  <script type="text/javascript"><![CDATA[
	  if('${currentBuildStatConfig.historicScale}' != ''){
		  selectionOption(document.getElementById('${buildStatId}_historicScale'), '${currentBuildStatConfig.historicScale}');
	  }
	  ]]></script>
      Job filtering : <input type="radio" id="${buildStatId}_jobFilteringType_ALL" checked="checked" name="jobFilteringType" value="ALL" onchange="jobFilterTypeSelected('${buildStatId}', this.value);" />ALL Jobs
      <input type="radio" id="${buildStatId}_jobFilteringType_REGEX" name="jobFilteringType" value="jobNameRegex" onchange="jobFilterTypeSelected('${buildStatId}', this.value);" />
      Job name regex : <input type="text" id="${buildStatId}_jobNameRegex" disabled="true" name="jobNameRegex" size="10" onblur="document.getElementById('${buildStatId}_jobFilter').value='jobNameRegex('+this.value+')';" />
      <input id="${buildStatId}_jobFilter" type="hidden" name="jobFilter" value="${currentBuildStatConfig.jobFilter}" /><br/>
	  <script type="text/javascript"><![CDATA[
	  if(document.getElementById('${buildStatId}_jobFilter').value.indexOf('jobNameRegex') != -1){
	  	  document.getElementById('${buildStatId}_jobFilteringType_REGEX').checked = 'checked';
	  	  initializeRegexField('${buildStatId}', '${currentBuildStatConfig.jobFilter}');
	  	  document.getElementById('${buildStatId}_jobFilteringType_REGEX').onchange();
	  	  document.getElementById('${buildStatId}_jobNameRegex').disabled = false;
	  } else if(document.getElementById('${buildStatId}_jobFilter').value.indexOf('ALL') != -1){
	  	  document.getElementById('${buildStatId}_jobFilteringType_ALL').checked = 'checked';
	  	  document.getElementById('${buildStatId}_jobFilteringType_ALL').change();
	  }
	  ]]></script>
      Statuses shown :
      <j:choose>
      	<j:when test="${currentBuildStatConfig != '' and ! currentBuildStatConfig.successShown}">
	      <input type="checkbox" value="true" name="successShown" />Success
      	</j:when>
      	<j:otherwise>
	      <input type="checkbox" value="true" name="successShown" checked="checked" />Success
      	</j:otherwise>
      </j:choose>
      <j:choose>
      	<j:when test="${currentBuildStatConfig != '' and ! currentBuildStatConfig.failuresShown}">
	      <input type="checkbox" value="true" name="failuresShown" />Failures
      	</j:when>
      	<j:otherwise>
    	  <input type="checkbox" value="true" name="failuresShown" checked="checked" />Failures
      	</j:otherwise>
      </j:choose>
      <j:choose>
      	<j:when test="${currentBuildStatConfig != '' and ! currentBuildStatConfig.unstablesShown}">
	      <input type="checkbox" value="true" name="unstablesShown" />Unstables
      	</j:when>
      	<j:otherwise>
    	  <input type="checkbox" value="true" name="unstablesShown" checked="checked" />Unstables
      	</j:otherwise>
      </j:choose>
      <j:choose>
      	<j:when test="${currentBuildStatConfig != '' and ! currentBuildStatConfig.abortedShown}">
    	  <input type="checkbox" value="true" name="abortedShown" />Aborted
      	</j:when>
      	<j:otherwise>
	      <input type="checkbox" value="true" name="abortedShown" checked="checked" />Aborted
      	</j:otherwise>
      </j:choose>
      <j:choose>
      	<j:when test="${currentBuildStatConfig != '' and ! currentBuildStatConfig.notBuildShown}">
	      <input type="checkbox" value="true" name="notBuildsShown" />Not Build<br/>
      	</j:when>
      	<j:otherwise>
    	  <input type="checkbox" value="true" name="notBuildsShown" checked="checked" />Not Build<br/>
      	</j:otherwise>
      </j:choose>
      <input type="hidden" name="buildStatId" value="${buildStatId}" />
      <f:submit value="${formSubmitLabel}" />
    </form>
</j:jelly>