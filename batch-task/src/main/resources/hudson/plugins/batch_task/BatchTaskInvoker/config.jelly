<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form">
  <f:entry>
    <f:repeatable var="config" items="${instance.configs}" noAddButton="true" minimum="1">
      <table width="100%">
        <f:entry title="${%Project}">
          <f:textbox name="task.invoker.project" value="${config.project}" onchange="batchTask.updateTaskList(this)" />
        </f:entry>
        <f:entry title="${%Task}">
          <select class="setting-input" name="task.invoker.task">
            <j:forEach var="task" items="${config.resolveProperty().tasks}">
              <f:option selected="${task.name==config.task}">${task.name}</f:option>
            </j:forEach>
          </select>
        </f:entry>
        <f:entry>
          <div align="right">
            <input type="button" value="${%Add another task...}" class="repeatable-add show-if-last" />
            <input type="button" value="${%Delete}" class="repeatable-delete show-if-not-only" style="margin-left: 1em;" />
          </div>
        </f:entry>
      </table>
    </f:repeatable>
    <script>
      var batchTask = {
        <!-- Fill the combo box by using the configured project name -->
        updateTaskList : function(e) {
          try {
            var Dom = YAHOO.util.Dom;
            var tr = Dom.getAncestorByTagName(e,"TR").nextSibling;
            while(tr.getAttribute("class")!=null)
              tr=tr.nextSibling;
            var combo = tr.getElementsByTagName("SELECT")[0];

            updateListBox(combo,"${rootURL}/plugin/batch-task/getTaskListJson?name="+e.value);
          } catch(e) {
            alert(e);
          }
        }
      };
    </script>
  </f:entry>
</j:jelly>