<?xml version="1.0" encoding="UTF-8"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.jvnet.hudson.plugins</groupId>
		<artifactId>plugin</artifactId>
		<version>1.207</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<groupId>com.mtvi.plateng.hudson</groupId>
	<artifactId>ldapemail</artifactId>
	<packaging>hpi</packaging>
	<version>1.0-SNAPSHOT</version>

	<dependencies>
		<dependency>
			<groupId>org.jvnet.hudson.main</groupId>
			<artifactId>hudson-core</artifactId>
			<version>1.200</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jvnet.hudson.main</groupId>
			<artifactId>hudson-war</artifactId>
			<type>war</type>
			<version>1.200</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>mockobjects</groupId>
			<artifactId>mockobjects-core</artifactId>
			<version>0.09</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>mockobjects</groupId>
			<artifactId>mockobjects-jdk1.4-j2ee1.3</artifactId>
			<version>0.09</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.4</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<!--
			Since new versions need to overwrite old versions, it's better
			not to have version number in the .hpi file name.
		-->
		<finalName>${project.artifactId}</finalName>
		<defaultGoal>package</defaultGoal>
		<plugins>
			<plugin>
				<groupId>org.jvnet.hudson.tools</groupId>
				<artifactId>maven-hpi-plugin</artifactId>
				<version>1.19</version>
				<extensions>true</extensions>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.0.2</version>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.1</version>
				<configuration>
					<configLocation>
						http://buildtools.mtvitech.com/resources/checkstyle.xml
					</configLocation>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.google.code.maven-license-plugin</groupId>
				<artifactId>maven-license-plugin</artifactId>
				<version>1.2.5</version>
				<configuration>
					<header>
						http://buildtools.mtvitech.com/resources/license.txt
					</header>
					<excludes>
						<exclude>target*/**</exclude>
					</excludes>
					<mapping>
						<jelly>xml</jelly>
					</mapping>
				</configuration>
			</plugin>
		</plugins>
	</build>
	
	<scm>
        <connection>scm:svn:https://svn.dev.java.net/svn/hudson/trunk/hudson/plugins/ldapemail</connection>
        <developerConnection>scm:svn:https://svn.dev.java.net/svn/hudson/trunk/hudson/plugins/ldapemail</developerConnection>
        <url>https://hudson.dev.java.net/source/browse/hudson/hudson/plugins/ldapemail</url>
    </scm>

	<repositories>
		<!-- We put the central repository first, as most artifacts will be
			found there
		-->
		<repository>
			<id>central</id>
			<url>http://repo1.maven.org/maven2</url>
			<releases>
				<enabled>true</enabled>
				<!-- only look for jars here when they are not present locally -->
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>

		<!-- We put the java.net2 repository second, as it's a Maven2 format
			and therefore _should_ be faster for Maven2. Hopefully, people
			will stop pushing their artifacts to java.net and push to java.net2
			or somebody will put a synchronizer in place to require
			only the java.net2 repository.
		-->
		<repository>
			<id>java.net2</id>
			<url>http://download.java.net/maven/2</url>
			<releases>
				<enabled>true</enabled>
				<!-- only look for jars here when they are not present locally -->
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>

		<!-- Now for the java.net repository (legacy layout) -->
		<repository>
			<id>java.net</id>
			<url>http://download.java.net/maven/1</url>
			<layout>legacy</layout>
			<releases>
				<enabled>true</enabled>
				<!-- only look for jars here when they are not present locally -->
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>

		<!-- Finally, the slowest repository of them all -->
		<repository>
			<id>hudson-libs</id>
			<url>
				https://hudson.dev.java.net/source/browse/*checkout*/hudson/hudson/main/lib
			</url>
			<layout>legacy</layout>
			<releases>
				<enabled>true</enabled>
				<!-- only look for jars here when they are not present locally -->
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<pluginRepositories>
		<!-- We put the central repository first, as most artifacts will be
			found there
		-->
		<pluginRepository>
			<id>central</id>
			<url>http://repo1.maven.org/maven2</url>
			<releases>
				<enabled>true</enabled>
				<!-- only look for jars here when they are not present locally -->
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>

		<pluginRepository>
			<id>java.net2</id>
			<url>http://download.java.net/maven/2</url>
			<releases>
				<enabled>true</enabled>
				<!-- only look for jars here when they are not present locally -->
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>
</project>
