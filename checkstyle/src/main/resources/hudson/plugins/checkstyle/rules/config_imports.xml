<?xml version="1.0" encoding="ISO-8859-1"?>

<document>

  <properties>
    <title>Imports</title>
    <author>Checkstyle Development Team</author>
  </properties>

  <body>
    <section name="AvoidStarImport">
      <subsection name="Description">
        <p>
          Checks that there are no import statements that use the * notation.
        </p>

        <p>
          Rationale: Importing all classes from a package leads to tight
          coupling between packages and might lead to problems when a new
          version of a library introduces name clashes.
        </p>
      </subsection>

      <subsection name="Properties">
        <table>
          <tr>
            <th>name</th>
            <th>description</th>
            <th>type</th>
            <th>default value</th>
          </tr>
          <tr>
            <td>excludes</td>
            <td>
              packages where star imports are allowed. Note that this property
              is not recursive, subpackages of excluded packages are not
              automatically excluded.
            </td>
            <td><a href="property_types.html#stringSet">list of strings</a></td>
            <td><span class="default">empty list</span></td>
          </tr>
        </table>
      </subsection>

      <subsection name="Example">
        <p>
          An example how to configure the check so that star imports from
          java.io and java.net are allowed:
        </p>

        <source>
&lt;module name="AvoidStarImport"&gt;
   &lt;property name="excludes" value="java.io,java.net"/&gt;
&lt;/module&gt;
        </source>
      </subsection>

      <subsection name="Package">
        <p> com.puppycrawl.tools.checkstyle.checks.imports </p>
      </subsection>

      <subsection name="Parent Module">
        <p>
          <a href="config.html#treewalker">TreeWalker</a>
        </p>
      </subsection>
    </section>

    <section name="IllegalImport">
      <subsection name="Description">
        <p>
          Checks for imports from a set of illegal packages. By default, the
          check rejects all <span class="code">sun.*</span> packages since
          programs that contain direct calls to the <span
          class="code">sun.*</span> packages are <a
          href="http://java.sun.com/products/jdk/faq/faq-sun-packages.html">not
          100% Pure Java</a>. To reject other packages, set property <span
          class="code"> illegalPkgs</span> to a list of the illegal packages.
        </p>
      </subsection>

      <subsection name="Properties">
        <table>
          <tr>
            <th>name</th>
            <th>description</th>
            <th>type</th>
            <th>default value</th>
          </tr>
          <tr>
            <td>illegalPkgs</td>
            <td>packages to reject</td>
            <td><a href="property_types.html#stringSet">list of strings</a></td>
            <td><span class="default">sun</span></td>
          </tr>
        </table>
      </subsection>

      <subsection name="Examples">
        <p>
          To configure the check:
        </p>
        <source>
&lt;module name=&quot;IllegalImport&quot;/&gt;
        </source>

        <p>
          To configure the check so that it rejects packages <span
          class="code">java.io.*</span> and <span
          class="code">java.sql.*</span>:
        </p>
        <source>
&lt;module name=&quot;IllegalImport&quot;&gt;
    &lt;property name=&quot;illegalPkgs&quot; value=&quot;java.io, java.sql&quot;/&gt;
&lt;/module&gt;
        </source>
      </subsection>

      <subsection name="Package">
        <p>
          com.puppycrawl.tools.checkstyle.checks.imports
        </p>
      </subsection>

      <subsection name="Parent Module">
        <p>
          <a href="config.html#treewalker">TreeWalker</a>
        </p>
      </subsection>
    </section>

    <section name="RedundantImport">
      <subsection name="Description">
        <p>
          Checks for redundant import statements. An import statement is
          considered redundant if:
        </p>

        <ul>
          <li>
            It is a duplicate of another import. This is, when a class is
            imported more than once.
          </li>
          <li>
            The class imported is from the <span class="code">java.lang</span>
            package, e.g.  importing <span
            class="code">java.lang.String</span>.
          </li>
          <li>
            The class imported is from the same package.
          </li>
        </ul>
      </subsection>

      <subsection name="Example">
        <p>
          To configure the check:
        </p>
        <source>
&lt;module name=&quot;RedundantImport&quot;/&gt;
        </source>
      </subsection>

      <subsection name="Package">
        <p>
          com.puppycrawl.tools.checkstyle.checks.imports
        </p>
      </subsection>

      <subsection name="Parent Module">
        <p>
          <a href="config.html#treewalker">TreeWalker</a>
        </p>
      </subsection>
    </section>

    <section name="UnusedImports">
      <subsection name="Description">
        <p>
          Checks for unused import statements. Checkstyle uses a simple but
          very reliable algorithm to report on unused import statements. An
          import statement is considered unused if:
        </p>

        <ul>
          <li>
            It is not referenced in the file. The algorithm does not support
            wild-card imports like <span class="code">import
            java.io.*;</span>. Most IDE's provide very sophisticated checks
            for imports that handle wild-card imports.
          </li>

          <li>
            It is a duplicate of another import. This is when a class is
            imported more than once.
          </li>

          <li>
            The class imported is from the <span class="code">java.lang</span>
            package. For example importing <span
            class="code">java.lang.String</span>.
          </li>

          <li>
            The class imported is from the same package.
          </li>
        </ul>
      </subsection>

      <subsection name="Example">
        <p>
          To configure the check:
        </p>
        <source>
&lt;module name=&quot;UnusedImports&quot;/&gt;
        </source>
      </subsection>

      <subsection name="Package">
        <p>
          com.puppycrawl.tools.checkstyle.checks.imports
        </p>
      </subsection>

      <subsection name="Parent Module">
        <p>
          <a href="config.html#treewalker">TreeWalker</a>
        </p>
      </subsection>
    </section>

    <section name="ImportOrder">
      <subsection name="Description">
        <p>
          Checks the ordering/grouping of imports.  Ensures that groups of
          imports come in a specific order (e.g., java. comes first,
          javax. comes first, then everything else) and imports within each
          group are in lexicographic order.
          Static imports must be at the end of a group and in lexicographic
          order amongst themselves.
        </p>
      </subsection>

      <subsection name="Properties">
        <table>
          <tr>
            <th>name</th>
            <th>description</th>
            <th>type</th>
            <th>default value</th>
          </tr>
          <tr>
            <td>groups</td>
            <td>
              list of imports groups (every group identified by string it's
              started)
            </td>
            <td><a href="property_types.html#stringSet">list of strings</a></td>
            <td><span class="default">empty list</span></td>
          </tr>
          <tr>
            <td>ordered</td>
            <td>whether imports within group should be sorted</td>
            <td><a href="property_types.html#Boolean">Boolean</a></td>
            <td>true</td>
          </tr>
          <tr>
            <td>separated</td>
            <td>
              whether imports groups should be separated by, at least, one
              blank line
            </td>
            <td><a href="property_types.html#Boolean">Boolean</a></td>
            <td>false</td>
          </tr>
          <tr>
            <td>caseSensitive</td>
            <td>whether string comparision should be case sensitive or not</td>
            <td><a href="property_types.html#Boolean">Boolean</a></td>
            <td>true</td>
          </tr>
        </table>
      </subsection>

      <subsection name="Example">
        <p>
          To configure the check so that it requires &quot;java&quot; packages
          first, than &quot;javax&quot; and than all other imports, imports
          will be sorted in the groups and groups are separated by, at least,
          on blank line:
        </p>

        <source>
&lt;module name=&quot;ImportOrder&quot;>
    &lt;property name=&quot;groups&quot; value=&quot;java,javax&quot;/>
    &lt;property name=&quot;ordered&quot; value=&quot;true&quot;/>
    &lt;property name=&quot;separated&quot; value=&quot;true&quot;/>
&lt;/module>
        </source>
      </subsection>

      <subsection name="Package">
        <p>
          com.puppycrawl.tools.checkstyle.checks.imports
        </p>
      </subsection>

      <subsection name="Parent Module">
        <p>
          <a href="config.html#treewalker">TreeWalker</a>
        </p>
      </subsection>
    </section>

    <section name="ImportControl">
      <subsection name="Description">
        <p>
          Controls what can be imported in each package. Useful for
          ensuring that application layering rules are not violated,
          especially on large projects.
        </p>

        <p>
          The DTD for a import control XML document is at <a
          href="http://www.puppycrawl.com/dtds/import_control_1_0.dtd">http://www.puppycrawl.com/dtds/import_control_1_0.dtd</a>. It
          contains documentation on each of the elements and attributes.
        </p>

        <p>
          The check validates a XML document when it loads the document.
          To validate against the above DTD, include the following
          document type declaration in your XML document:
        </p>

        <pre>
&lt;!DOCTYPE import-control PUBLIC
    &quot;-//Puppy Crawl//DTD Import Control 1.0//EN&quot;
    &quot;http://www.puppycrawl.com/dtds/import_control_1_0.dtd&quot;&gt;
        </pre>
      </subsection>

      <subsection name="Properties">
        <table>
          <tr>
            <th>name</th>
            <th>description</th>
            <th>type</th>
            <th>default value</th>
          </tr>
          <tr>
            <td>file</td>
            <td>
              name of the file containing the import control configuration.
            </td>
            <td><a href="property_types.html#string">string</a></td>
            <td><span class="default">null</span></td>
          </tr>
          <tr>
            <td>url</td>
            <td>
              url of the file containing the import control configuration.
            </td>
            <td><a href="property_types.html#string">string</a></td>
            <td><span class="default">null</span></td>
          </tr>
        </table>
      </subsection>

      <subsection name="Example">
        <p>
          To configure the check using a import control file called
          &quot;import-control.xml&quot;, then have the following:
        </p>

        <source>
&lt;module name=&quot;ImportControl&quot;>
    &lt;property name=&quot;file&quot; value=&quot;import-control.xml&quot;/>
&lt;/module>
        </source>

        <p>
          For an example import control file, look at the file called <a
          href="http://checkstyle.svn.sourceforge.net/viewvc/checkstyle/trunk/checkstyle/import-control.xml?view=markup">import-control.xml</a>
          which is part of the Checkstyle distribution.
        </p>
      </subsection>

      <subsection name="Package">
        <p>
          com.puppycrawl.tools.checkstyle.checks.imports
        </p>
      </subsection>

      <subsection name="Parent Module">
        <p>
          <a href="config.html#treewalker">TreeWalker</a>
        </p>
      </subsection>
    </section>
  </body>
</document>
